import os
import ctypes
import pefile
import subprocess


def find_dll_directory(dll_name):
    try:
        output = subprocess.check_output(["where", dll_name], shell=True, universal_newlines=True)
        paths = output.strip().splitlines()
        if paths:
            return os.path.dirname(paths[0])
    except subprocess.CalledProcessError:
        return None


def is_dll_loadable(dll_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å DLL."""
    try:
        ctypes.WinDLL(dll_path)
        return True
    except OSError:
        system_dll_path = find_dll_directory(dll_path)
        if system_dll_path is None:
            return False
        os.add_dll_directory(system_dll_path)
        try:
            ctypes.WinDLL(system_dll_path)
            return True
        except OSError:
            return False

def get_dll_dependencies(dll_path):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π DLL."""
    try:
        pe = pefile.PE(dll_path)
        return [entry.dll.decode() for entry in pe.DIRECTORY_ENTRY_IMPORT]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ {dll_path}: {e}")
        return []

def find_dll_in_system(dll_name):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ DLL –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö."""
    system_paths = [r"C:\Windows\System32", r"C:\Windows\SysWOW64"]
    for path in system_paths:
        full_path = os.path.join(path, dll_name)
        if os.path.exists(full_path):
            return full_path
    return None

def check_missing_dependencies(dll_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DLL: {dll_path}")

    dependencies = get_dll_dependencies(dll_path)
    if not dependencies:
        print("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.")
        return
    
    missing = []
    print("\nüìå –°–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    for dep in dependencies:
        dep_dir = find_dll_directory(dep)
        dep_path = os.path.join(dep_dir, dep) if dep_dir is not None else dep
        if dep_path and is_dll_loadable(dep_path):
            print(f"  ‚úÖ {dep} (–Ω–∞–π–¥–µ–Ω–∞: {dep_path})")
        else:
            print(f"  ‚ùå {dep} (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!)")
            missing.append(dep)

    if missing:
        print("\nüö® –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        for dep in missing:
            print(f"  ‚ùå {dep}")
        print("\n‚ùå –û—Å–Ω–æ–≤–Ω–∞—è DLL –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è!")
    else:
        print("\n‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è DLL –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫!")

# –£–∫–∞–∂–∏ –ø—É—Ç—å –∫ —Å–≤–æ–µ–π DLL
dll_path = "bin/win-capture-audio.dll"

if __name__ == "__main__":
    os.add_dll_directory(os.path.join(os.getcwd(), "bin"))
    check_missing_dependencies(dll_path)